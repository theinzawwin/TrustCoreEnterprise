// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrustCoreEnterprise.Models;
using TrustCoreEntity.Models;

namespace TrustCoreEnterprise.Migrations
{
    [DbContext(typeof(TLSPOSContext))]
    partial class TLSPOSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrustCoreEnterprise.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountTypeId");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("AccountStatus")
                        .HasMaxLength(50);

                    b.Property<double?>("Credit");

                    b.Property<double?>("Debit");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Status");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.AssetDep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetId");

                    b.Property<double?>("DepAmount");

                    b.Property<DateTime?>("DepDate")
                        .HasColumnType("date");

                    b.Property<double?>("DepPercent");

                    b.HasKey("Id");

                    b.ToTable("AssetDep");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Bills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BillDate")
                        .HasColumnName("Bill_Date")
                        .HasColumnType("date");

                    b.Property<string>("BillTime")
                        .HasColumnName("Bill_Time")
                        .HasMaxLength(15);

                    b.Property<int>("CashierId");

                    b.Property<int?>("CustomerId")
                        .HasColumnName("Customer_Id");

                    b.Property<double>("DiscountAmount")
                        .HasColumnName("Discount_Amount");

                    b.Property<double?>("NetTotalAmount")
                        .HasColumnName("NetTotal_Amount");

                    b.Property<double>("PayAmount")
                        .HasColumnName("Pay_Amount");

                    b.Property<double?>("RefundAmount")
                        .HasColumnName("Refund_Amount");

                    b.Property<double>("RemainAmount")
                        .HasColumnName("Remain_Amount");

                    b.Property<string>("SaleStatus")
                        .HasColumnName("Sale_Status")
                        .HasMaxLength(20);

                    b.Property<double?>("SubTotalAmount")
                        .HasColumnName("SubTotal_Amount");

                    b.Property<double>("TaxAmount")
                        .HasColumnName("Tax_Amount");

                    b.Property<double>("TotalAmount")
                        .HasColumnName("Total_Amount");

                    b.Property<double?>("VoucherDisAmount");

                    b.Property<double?>("VoucherDisPercent");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.CustomerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnName("Customer_Id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnName("Open_Date")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Customer_Account");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Crcode")
                        .IsRequired()
                        .HasColumnName("CRCode")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Nrc");

                    b.Property<string>("Occupation");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.DebitAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnName("Account_Id");

                    b.Property<int?>("BillId");

                    b.Property<double?>("DebitAmount")
                        .HasColumnName("Debit_Amount");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnName("Debit_Date")
                        .HasColumnType("date");

                    b.Property<double?>("RemainAmount")
                        .HasColumnName("Remain_Amount");

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("Debit_Account");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.DebitSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("Supplier_Id");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Debit_Supplier");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<int>("ExpenseCategoryId");

                    b.Property<DateTime?>("ExpenseDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategory");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Finance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnName("Account_Id");

                    b.Property<int?>("CustomerId")
                        .HasColumnName("Customer_Id");

                    b.Property<int?>("PayAccountId")
                        .HasColumnName("Pay_Account_Id");

                    b.Property<double?>("RemainAmount");

                    b.Property<double?>("TotalAmount");

                    b.HasKey("Id");

                    b.ToTable("Finance");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.FocHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProId");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ProId");

                    b.ToTable("FocHead");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.FocPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FocId");

                    b.Property<int?>("Qty");

                    b.Property<int?>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("FocId");

                    b.ToTable("FocPay");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.FocSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FocId");

                    b.Property<int?>("Qty");

                    b.Property<int?>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("FocId");

                    b.ToTable("FocSell");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.GrossSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Credit");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<double?>("Debit");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("TitleId");

                    b.HasKey("Id");

                    b.ToTable("GrossSummary");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.GrossTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("GrossTitle");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount");

                    b.Property<string>("Description");

                    b.Property<int?>("IncomeCatId");

                    b.Property<DateTime?>("IncomeDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("IncomeCatId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.IncomeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("IncomeCategory");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.ItemDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("DiscountAmount");

                    b.Property<int?>("ProId");

                    b.Property<int?>("Status");

                    b.Property<int?>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("ProId");

                    b.ToTable("ItemDiscount");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<string>("AccountStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<double?>("Credit");

                    b.Property<double?>("Debit");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("JournalDate")
                        .HasColumnType("date");

                    b.Property<int?>("RefId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Journal");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.LoginUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DelStatus")
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("RoleId")
                        .HasColumnName("Role_Id");

                    b.Property<bool?>("Status");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("LoginUser");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PayAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnName("Account_Id");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnName("DebitAccount_Id");

                    b.Property<double?>("PayAmount");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnName("Pay_Date")
                        .HasColumnType("date");

                    b.Property<double?>("RemainAmount");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DebitAccountId");

                    b.ToTable("Pay_Account");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PaySupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("PayAmount");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnName("Pay_Date")
                        .HasColumnType("date");

                    b.Property<int?>("PurchaseCreditId")
                        .HasColumnName("PurchaseCredit_Id");

                    b.Property<double?>("RemainAmount");

                    b.Property<string>("Remark")
                        .HasMaxLength(50);

                    b.Property<int?>("SupAccountId");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Pay_Supplier");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PorderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId");

                    b.Property<double>("Price");

                    b.Property<int>("Quantity");

                    b.Property<int>("StockId");

                    b.Property<double>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("POrder_Product");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrivilegeName")
                        .HasColumnName("Privilege_Name")
                        .HasMaxLength(50);

                    b.Property<string>("PrivilegeShortName")
                        .HasColumnName("Privilege_ShortName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .IsRequired();

                    b.Property<int>("CategoryId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Sku")
                        .HasMaxLength(50);

                    b.Property<int?>("SubcategoryId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .HasName("IX_FK_ProductSubcategory");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.ProfitLoss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Credit");

                    b.Property<double?>("Debit");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("ProfitLoss");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Status");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Promotion");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("CreditAmount")
                        .HasColumnName("Credit_Amount");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("PurchaseInvoiceId")
                        .HasColumnName("PurchaseInvoice_Id");

                    b.Property<double?>("RemainAmount")
                        .HasColumnName("Remain_Amount");

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<int>("SupplierAccountId")
                        .HasColumnName("SupplierAccount_Id");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SupplierAccountId");

                    b.ToTable("Purchase_Credit");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("DiscountAmount");

                    b.Property<double>("NetTotalAmount")
                        .HasColumnName("NetTotal_Amount");

                    b.Property<double?>("PayAmount");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<string>("RefNo")
                        .HasMaxLength(50);

                    b.Property<double?>("RemainAmount");

                    b.Property<string>("Remark");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("Supplier_Id");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("date");

                    b.Property<double>("TotalAmount");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Purchase_Invoice");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("PayAmount");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnName("Purchase_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PurchaseInvoiceId");

                    b.Property<double>("PurchasePrice")
                        .HasColumnName("Purchase_Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("RefNo")
                        .HasMaxLength(50);

                    b.Property<double?>("RemainAmount");

                    b.Property<int>("StockId");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("Supplier_Id");

                    b.Property<double?>("TotalAmount");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StockId")
                        .HasName("IX_FK_ProductPurchase_Item");

                    b.ToTable("Purchase_Item");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("date");

                    b.Property<int>("SupplierId");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("PurchasePrice");

                    b.Property<int?>("Quantity");

                    b.Property<string>("RefNo")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("StockId");

                    b.Property<double?>("TotalPurchasePrice");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("PurchaseReturn");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.RolePrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PrivilegeId")
                        .HasColumnName("Privilege_Id");

                    b.Property<int?>("RoleId")
                        .HasColumnName("Role_Id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Role_Privilege");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SaleOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int?>("CustomerId");

                    b.Property<double?>("DiscountAmount");

                    b.Property<double?>("DiscountPercent");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("date");

                    b.Property<string>("SaleStatus")
                        .HasColumnName("Sale_Status")
                        .HasMaxLength(50);

                    b.Property<string>("SaleType")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("SaleOrder");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SaleReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50);

                    b.Property<int?>("Quantity");

                    b.Property<string>("Remark")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<double?>("SellPrice")
                        .HasColumnName("Sell_Price");

                    b.Property<int?>("StockId");

                    b.Property<double>("TotalAmount");

                    b.Property<int>("UserId");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SaleReturn");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.ServiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ServiceCategory");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.ServiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50);

                    b.Property<string>("Name");

                    b.Property<int?>("ServiceCategoryId");

                    b.HasKey("Id");

                    b.ToTable("ServiceItem");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("BackupPath")
                        .HasMaxLength(50);

                    b.Property<string>("CloseTime")
                        .HasMaxLength(15);

                    b.Property<string>("Contact")
                        .HasMaxLength(50);

                    b.Property<string>("Crcode")
                        .HasColumnName("CRCode")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("OpenTime")
                        .HasMaxLength(15);

                    b.Property<string>("QuotationNo")
                        .HasMaxLength(3);

                    b.Property<double?>("Tax");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Sku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sku");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SoldItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillId");

                    b.Property<int?>("DebtId");

                    b.Property<double?>("DiscountAmount");

                    b.Property<double?>("NetAmount");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("SellDate")
                        .HasColumnName("Sell_Date")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<int>("StockId");

                    b.Property<double>("TotalAmount");

                    b.Property<double>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("StockId")
                        .HasName("IX_FK_StockSold_Item");

                    b.ToTable("Sold_Item");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SoldServiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillId");

                    b.Property<double?>("DiscountAmount");

                    b.Property<double?>("NetAmount");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("SellDate")
                        .HasColumnName("Sell_Date")
                        .HasColumnType("date");

                    b.Property<int?>("ServiceId");

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<double>("TotalAmount");

                    b.Property<double>("UnitPrice");

                    b.HasKey("Id");

                    b.ToTable("Sold_ServiceItem");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SorderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Discount");

                    b.Property<double?>("NetAmount");

                    b.Property<int>("OrderId");

                    b.Property<double?>("Price");

                    b.Property<int?>("Quantity");

                    b.Property<int>("StockId");

                    b.Property<double?>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("SOrder_Product");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.StockAdjust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustQuantity");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("HandQuantity");

                    b.Property<string>("Reason")
                        .HasMaxLength(255);

                    b.Property<int>("StockId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("StockAdjust");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.StockLoss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int>("LossQuantity");

                    b.Property<double>("PurchasePrice");

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<int>("StockId");

                    b.Property<double?>("TotalAmount");

                    b.Property<int?>("TotalQuantity");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockLoss");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Stocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("BulkAmount");

                    b.Property<int?>("BulkFormula");

                    b.Property<int?>("BulkQuantity");

                    b.Property<double?>("BulkSellPrice")
                        .HasColumnName("BulkSell_Price");

                    b.Property<int?>("Discount");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<int?>("MinimumQuantity");

                    b.Property<int>("ProductId");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnName("Purchase_Price");

                    b.Property<int?>("Quantity");

                    b.Property<double?>("RetAmount");

                    b.Property<int?>("RetFormula");

                    b.Property<double?>("SellPrice")
                        .HasColumnName("Sell_Price");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .HasName("IX_FK_ProductStock");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Subcategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Unit")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .HasName("IX_FK_CategorySubcategory");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Company")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(15);

                    b.Property<string>("SupplierNo")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.TargetDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("DiscountAmount");

                    b.Property<int?>("ProId");

                    b.Property<int?>("Status");

                    b.Property<double?>("TargetAmount");

                    b.HasKey("Id");

                    b.ToTable("TargetDiscount");
                });

            modelBuilder.Entity("TrustCoreEntity.Models.RestTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Person");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("RestTable");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Account", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.AccountType", "AccountType")
                        .WithMany("Account")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_Account_AccountType");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Asset", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Account", "Account")
                        .WithMany("Asset")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Asset_Account");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Bills", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.LoginUser", "Cashier")
                        .WithMany("Bills")
                        .HasForeignKey("CashierId")
                        .HasConstraintName("FK_Bills_LoginUser");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.CustomerAccount", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Customers", "Customer")
                        .WithMany("CustomerAccount")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Customer_Account_Customers");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.DebitAccount", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Bills", "Bill")
                        .WithMany("DebitAccount")
                        .HasForeignKey("BillId")
                        .HasConstraintName("FK_Debit_Account_Bills");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.DebitSupplier", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Supplier", "Supplier")
                        .WithMany("DebitSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Debit_Supplier_Supplier");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Expense", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany("Expense")
                        .HasForeignKey("ExpenseCategoryId")
                        .HasConstraintName("FK_Expense_ExpenseCategory");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.FocHead", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Promotion", "Pro")
                        .WithMany("FocHead")
                        .HasForeignKey("ProId")
                        .HasConstraintName("FK_FocHead_Promotion");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.FocPay", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.FocHead", "Foc")
                        .WithMany("FocPay")
                        .HasForeignKey("FocId")
                        .HasConstraintName("FK_FocPay_FocHead");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.FocSell", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.FocHead", "Foc")
                        .WithMany("FocSell")
                        .HasForeignKey("FocId")
                        .HasConstraintName("FK_FocSell_FocHead");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Income", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.IncomeCategory", "IncomeCat")
                        .WithMany("Income")
                        .HasForeignKey("IncomeCatId")
                        .HasConstraintName("FK_Income_IncomeCategory");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.ItemDiscount", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Promotion", "Pro")
                        .WithMany("ItemDiscount")
                        .HasForeignKey("ProId")
                        .HasConstraintName("FK_Promotion");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Journal", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Account", "Account")
                        .WithMany("Journal")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Journal_Account");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.LoginUser", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Role", "Role")
                        .WithMany("LoginUser")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_LoginUser_Role");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PayAccount", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.CustomerAccount", "Account")
                        .WithMany("PayAccount")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Pay_Account_Pay_Account");

                    b.HasOne("TrustCoreEnterprise.Models.DebitAccount", "DebitAccount")
                        .WithMany("PayAccount")
                        .HasForeignKey("DebitAccountId")
                        .HasConstraintName("Debit_Account_Id");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PorderProduct", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.PurchaseOrder", "Order")
                        .WithMany("PorderProduct")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_POrder_Product_PurchaseOrder");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseCredit", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.DebitSupplier", "SupplierAccount")
                        .WithMany("PurchaseCredit")
                        .HasForeignKey("SupplierAccountId")
                        .HasConstraintName("FK_Debit_Supplier_Account_Id");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.PurchaseItem", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Stocks", "Stock")
                        .WithMany("PurchaseItem")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_ProductPurchase_Item");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.RolePrivilege", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Role", "Role")
                        .WithMany("RolePrivilege")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Role_Privilege_Role");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SaleReturn", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.LoginUser", "User")
                        .WithMany("SaleReturn")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SaleReturn_LoginUser");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Sku", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Categories", "Category")
                        .WithMany("Sku")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Sku_Categories");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SoldItem", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Stocks", "Stock")
                        .WithMany("SoldItem")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_StockSold_Item");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.SorderProduct", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Stocks", "Stock")
                        .WithMany("SorderProduct")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_SOrder_Product_SOrder_Product");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.StockLoss", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Stocks", "Stock")
                        .WithMany("StockLoss")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_StockLoss_Stocks");
                });

            modelBuilder.Entity("TrustCoreEnterprise.Models.Stocks", b =>
                {
                    b.HasOne("TrustCoreEnterprise.Models.Products", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductStock");
                });
#pragma warning restore 612, 618
        }
    }
}
